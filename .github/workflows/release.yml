name: Create Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        
      # Extract release notes from git log
      - name: Generate Release Notes
        id: release_notes
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -z "$PREVIOUS_TAG" ]; then
            # If there's no previous tag, use the first commit
            PREVIOUS_COMMIT=$(git rev-list --max-parents=0 HEAD)
            echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
            git log --pretty=format:"- %s" $PREVIOUS_COMMIT..HEAD >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          else
            echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
            git log --pretty=format:"- %s" $PREVIOUS_TAG..HEAD >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          fi

      # Log in to the Container registry
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata for Docker
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
          flavor: |
            latest=auto

      # Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # Create GitHub Release
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          body: |
            ## Changes in this Release
            
            ${{ env.RELEASE_NOTES }}
            
            ## Docker Image
            
            ```
            docker pull ghcr.io/${{ github.repository }}:${{ steps.meta.outputs.version }}
            ```
            
            ## Environment Variables
            
            Remember to set these environment variables when deploying:
            - `PORT` or `SOCKETCLUSTER_PORT`: Port to run the server on (default: 8000)
            - `ADMIN_PASSWORD_HASH`: SHA-256 hash of admin password
            - `ENV`: Environment (dev/prod)
            - `SOCKETCLUSTER_LOG_LEVEL`: Log verbosity (0-3)
          draft: false
          prerelease: false